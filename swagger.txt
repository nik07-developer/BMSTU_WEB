openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  version: 1.0.0
  description: |-
    Komarov Nikita & Cheprasov Kirill Web project.
    Interactive character sheet for DnD.

paths:
  /login:
    post:
      tags:
        - auth
      summary: Авторизоваться
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        '200':
          description: Авторизация прошла успешно
          content:
            application/json:
              schema:
                type: object
                properties:
                  auth_token:
                    type: string
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'
          
  /logout:
    delete:
      security: 
        - basicAuth: []
      tags:
        - auth
      summary: Выйти из аккаунта
      responses:
        '200':
          description: Выход из аккаунта
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'
          
  /characters:
    post:
      tags:
        - characters
      security: 
        - basicAuth: []
      summary: Создать нового персонажа на сервере
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CharacterCreationDTO'
      responses:
        '200':
          description: Персонаж загружен на сервер
          content:
            application/json:
              schema:
                type: object
                properties:
                  character_id:
                    type: integer
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'
    get:
      tags:
        - characters
      security: 
        - basicAuth: []
      summary: Получить персонажей
      responses:
        '200':
          description: Персонажи получены
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Character'
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '404':
          $ref: '#/responses/schemas/NotFound'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'
      
      
  /characters/{character_id}:
    get:
      tags:
        - characters
      security: 
        - basicAuth: []
      summary: Получить персонажа
      parameters:
        - in: path
          name: character_id
          schema:
            type: integer
          required: true
          description: ID персонажа
      responses:
        '200':
          description: Персонаж получен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '404':
          $ref: '#/responses/schemas/NotFound'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'    
    put:
      tags:
        - characters
      security: 
        - basicAuth: []
      summary: Заменить персонажа на сервере
      parameters:
        - in: path
          name: character_id
          schema:
            type: integer
          required: true
          description: ID персонажа
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CharacterCreationDTO'
      responses:
        '200':
          description: Персонаж заменён
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '404':
          $ref: '#/responses/schemas/NotFound'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'
    patch:
      tags:
        - characters
      security: 
        - basicAuth: []
      summary: Изменить персонажа на сервере
      parameters:
        - in: path
          name: character_id
          schema:
            type: integer
          required: true
          description: ID персонажа
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CharacterCreationDTO'
      responses:
        '200':
          description: Персонаж изменён
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '404':
          $ref: '#/responses/schemas/NotFound'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'
    delete:
      tags:
        - characters
      security: 
        - basicAuth: []
      summary: Удалить персонажа на сервере
      parameters:
        - in: path
          name: character_id
          schema:
            type: integer
          required: true
          description: ID персонажа
      responses:
        '200':
          description: Персонаж удалён
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '404':
          $ref: '#/responses/schemas/NotFound'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'
          
  /characters/{character_id}/view-configs:
    post:
      tags:
        - character_views
      security: 
        - basicAuth: []
      summary: Создать настройки отображения персонажа на сервере
      parameters:
        - in: path
          name: character_id
          schema:
            type: integer
          required: true
          description: ID персонажа
        - in: query
          name: platform
          schema:
            type: string
          description: Платформа
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CharacterViewConfig'
      responses:
        '200':
          description: Персонаж загружен на сервер
          content:
            application/json:
              schema:
                type: object
                properties:
                  character_id:
                    type: integer
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'
    get:
      tags:
        - character_views
      security: 
        - basicAuth: []
      summary: Получить настройки отображения персонажа
      parameters:
        - in: path
          name: character_id
          schema:
            type: integer
          required: true
          description: ID персонажа
        - in: query
          name: platform
          schema:
            type: string
          description: Платформа
          required: true
      responses:
        '200':
          description: Настройки отображения персонажа получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharacterViewConfig'
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '404':
          $ref: '#/responses/schemas/NotFound'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'    
    put:
      tags:
        - character_views
      security: 
        - basicAuth: []
      summary: Заменить настройки отображения персонажа
      parameters:
        - in: path
          name: character_id
          schema:
            type: integer
          required: true
          description: ID персонажа
        - in: query
          name: platform
          schema:
            type: string
          description: Платформа
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CharacterViewConfig'
      responses:
        '200':
          description: Настройки отображения персонажа заменены
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '404':
          $ref: '#/responses/schemas/NotFound'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'
    patch:
      tags:
        - character_views
      security: 
        - basicAuth: []
      summary: Изменить настройки отображения персонажа
      parameters:
        - in: path
          name: character_id
          schema:
            type: integer
          required: true
          description: ID персонажа
        - in: query
          name: platform
          schema:
            type: string
          description: Платформа
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CharacterViewConfig'
      responses:
        '200':
          description: Настройки отображения персонажа изменены
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '404':
          $ref: '#/responses/schemas/NotFound'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'
    delete:
      tags:
        - character_views
      security: 
        - basicAuth: []
      summary: Удалить настройки отображения персонажа
      parameters:
        - in: path
          name: character_id
          schema:
            type: integer
          required: true
          description: ID персонажа
        - in: query
          name: platform
          schema:
            type: string
          description: Платформа
          required: true
      responses:
        '200':
          description: Настройки отображения персонажа удалены
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '404':
          $ref: '#/responses/schemas/NotFound'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'        
          
  /campaigns:
    post:
      tags:
        - campaigns
      security: 
        - basicAuth: []
      summary: Создать кампанию
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignCreationDTO'
      responses:
          '200':
            description: Кампания создана
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    campaign_id:
                      type: integer
          '400':
            $ref: '#/responses/schemas/InvalidRequest'
          '503':
            $ref: '#/responses/schemas/ServiceUnavailable'
    get:
      tags:
        - campaigns
      security: 
        - basicAuth: []
      summary: Получить кампании
      responses:
        '200':
          description: Кампании получены
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Campaign'
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '404':
          $ref: '#/responses/schemas/NotFound'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'
      
  /campaigns/{campaign_id}:
    get:
      tags:
        - campaigns
      security: 
        - basicAuth: []
      summary: Получить кампанию
      parameters:
        - in: path
          name: campaign_id
          schema:
            type: integer
          required: true
          description: ID кампании
      responses:
        '200':
          description: Кампания получена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '404':
          $ref: '#/responses/schemas/NotFound'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'    
    put:
      tags:
        - campaigns
      security: 
        - basicAuth: []
      summary: Заменить кампанию
      parameters:
        - in: path
          name: campaign_id
          schema:
            type: integer
          required: true
          description: ID кампании
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignChangeDTO'
      responses:
        '200':
          description: Кампания заменена
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '404':
          $ref: '#/responses/schemas/NotFound'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'
    patch:
      tags:
        - campaigns
      security: 
        - basicAuth: []
      summary: Изменить кампанию
      parameters:
        - in: path
          name: campaign_id
          schema:
            type: integer
          required: true
          description: ID кампании
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignChangeDTO'
      responses:
        '200':
          description: Кампания изменена
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '404':
          $ref: '#/responses/schemas/NotFound'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'
    delete:
      tags:
        - campaigns
      security: 
        - basicAuth: []
      summary: Удалить кампанию
      parameters:
        - in: path
          name: campaign_id
          schema:
            type: integer
          required: true
          description: ID кампании
      responses:
        '200':
          description: Кампания удалена
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '404':
          $ref: '#/responses/schemas/NotFound'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'
          
      
  #INVITATINOS    
  /campaigns/{campaign_id}/characters:
    post:
      tags:
        - invitations
      security: 
        - basicAuth: []
      summary: Добавить персонажа в кампанию
      parameters:
        - in: path
          name: campaign_id
          schema:
            type: integer
          required: true
          description: ID кампании
        - in: query
          name: character_token
          schema:
            type: string
          description: Токен персонажа
          required: true
      responses:
          '200':
            description: Персонаж добавлен в кампанию
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    character_id:
                      type: integer
          '400':
            $ref: '#/responses/schemas/InvalidRequest'
          '404':
            $ref: '#/responses/schemas/NotFound'
          '503':
            $ref: '#/responses/schemas/ServiceUnavailable'
            
  /campaigns/{campaign_id}/characters/{character_id}:
    delete:
      tags:
        - invitations
      security: 
        - basicAuth: []
      summary: Удалить персонажа из кампании
      parameters:
        - in: path
          name: campaign_id
          schema:
            type: integer
          required: true
          description: ID кампании
        - in: path
          name: character_id
          schema:
            type: integer
          description: ID персонажа
          required: true
      responses:
        '200':
          description: Персонаж удалён из кампании
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '404':
          $ref: '#/responses/schemas/NotFound'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'
          
  /characters/{character_id}/campaigns:
    post:
      tags:
        - invitations
      security: 
        - basicAuth: []
      summary: Добавить персонажа в кампанию
      parameters:
        - in: path
          name: character_id
          schema:
            type: integer
          required: true
          description: ID кампании
        - in: query
          name: campaign_token
          schema:
            type: string
          description: Токен кампании
          required: true
      responses:
        '200':
          description: Персонаж добавлен в кампанию
          content:
            application/json:
              schema:
                type: object
                properties:
                  campaign_id:
                    type: integer
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '404':
          $ref: '#/responses/schemas/NotFound'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'
          
  /characters/{character_id}/campaigns/{campaign_id}:
    delete:
      tags:
        - invitations
      security: 
        - basicAuth: []
      summary: Удалить персонажа из кампании
      parameters:
        - in: path
          name: campaign_id
          schema:
            type: integer
          required: true
          description: ID кампании
        - in: path
          name: character_id
          schema:
            type: integer
          description: ID персонажа
          required: true
      responses:
        '200':
          description: Персонаж удалён из кампании
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '404':
          $ref: '#/responses/schemas/NotFound'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'
          
  #TOKENS  
  /characters/{character_id}/token:
    post:
      tags:
        - tokens
      security: 
        - basicAuth: []
      summary: Создать токен персонажа
      parameters:
        - in: path
          name: character_id
          schema:
            type: integer
          required: true
          description: ID персонажа
      responses:
        '200':
          description: Создан токен персонажа
          content:
            application/json:
              schema:
                type: object
                properties:
                  character_token:
                    type: string
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '404':
          $ref: '#/responses/schemas/NotFound'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'
    delete:
      tags:
        - tokens
      security: 
        - basicAuth: []
      summary: Удалить токен персонажа
      parameters:
        - in: path
          name: character_id
          schema:
            type: integer
          required: true
          description: ID персонажа
        - in: query
          name: token
          schema:
            type: string
          required: true
          description: Токен персонажа
      responses:
        '200':
          description: Удалён токен персонажа
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '404':
          $ref: '#/responses/schemas/NotFound'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'
          
  /campaigns/{campaign_id}/token:
    post:
      tags:
        - tokens
      security: 
        - basicAuth: []
      summary: Создать токен кампании
      parameters:
        - in: path
          name: campaign_id
          schema:
            type: integer
          required: true
          description: ID кампании
      responses:
        '200':
          description: Создан токен кампании
          content:
            application/json:
              schema:
                type: object
                properties:
                  campaign_token:
                    type: string
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '404':
          $ref: '#/responses/schemas/NotFound'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'
    delete:
      tags:
        - tokens
      security: 
        - basicAuth: []
      summary: Удалить токен кампании
      parameters:
        - in: path
          name: campaign_id
          schema:
            type: integer
          required: true
          description: ID кампании
        - in: query
          name: token
          schema:
            type: string
          required: true
          description: Токен кампании
      responses:
        '200':
          description: Удалён токен кампании
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '404':
          $ref: '#/responses/schemas/NotFound'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'
          
  /users:
    post:
      tags:
        - users
      summary: Зарегестрировать пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreationDTO'
      responses:
        '200':
          description: Пользователь зарегестрирован
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'
    patch:
      tags:
        - users
      summary: Изменить данные пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserChangeDTO'
      responses:
        '200':
          description: Данные пользователя изменены
        '400':
          $ref: '#/responses/schemas/InvalidRequest'
        '503':
          $ref: '#/responses/schemas/ServiceUnavailable'

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    Character:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Frodo Goblings
        data:
          type: string
    CharacterCreationDTO:
      type: object
      properties:
        name:
          type: string
          example: Frodo Goblings
        data:
          type: string
    CharacterChangeDTO:
      type: object
      properties:
        name:
          type: string
          example: Frodo Goblings
        data:
          type: string
    CharacterViewConfig:
      type: object
      properties:
        data:
          type: string
    Campaign:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Adventure
        masterId:
          type: integer
          example: 1
    CampaignCreationDTO:
      type: object
      properties:
        name:
          type: string
          example: Adventure
    CampaignChangeDTO:
      type: object
      properties:
        name:
          type: string
          example: Adventure
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        login:
          type: string
          example: nik07
        password:
          type: string
          example: qwerty
        name:
          type: string
          example: Nikita
    UserCreationDTO:
      type: object
      properties:
        login:
          type: string
          example: nik07
        password:
          type: string
          example: qwerty
        name:
          type: string
          example: Nikita
    UserChangeDTO:
      type: object
      properties:
        password:
          type: string
          example: qwerty
        name:
          type: string
          example: Nikita
    Credentials:
      properties:
        login:
          type: string
          example: "login"
        password:
          type: string
          example: "password"
          
          
responses:
  schemas:
    InvalidRequest:
      description: Невалидный запрос
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
    NotFound:
      description: Объект не найден
      
    Unautorized:
      description: Не авторизованный запрос
      
    ServiceUnavailable:
      description: Сервис не работает, попробуйте позже
      
      
      
      